{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Logic App"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics workspace"
            }
        },
        "resourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group containing the Log Analytics workspace"
            }
        },
        "watchlistName": {
            "type": "string",
            "defaultValue": "SocRA",
            "metadata": {
                "description": "Name of the watchlist containing SOC response actions"
            }
        }
    },
    "variables": {
        "sentinelConnectionName": "azuresentinel",
        "monitorLogsConnectionName": "azuremonitorlogs"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('sentinelConnectionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "Azure Sentinel",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
                },
                "parameterValues": {}
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('monitorLogsConnectionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "Azure Monitor Logs",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
                },
                "parameterValues": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('sentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('monitorLogsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation",
                                "operationId": "SubscribeIncidents"
                            }
                        }
                    },
                    "actions": {
                        "For_each_-_alert": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "For_each_-_task": {
                                    "foreach": "@body('Run_query_and_list_results')?['value']",
                                    "actions": {
                                        "Add_task_to_incident": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "taskTitle": "@items('For_each_-_task')?['Title']",
                                                    "taskDescription": "<p>@{items('For_each_-_task')?['Description']}</p>"
                                                },
                                                "path": "/Incidents/CreateTask"
                                            }
                                        },
                                        "Add_comment_to_incident_(V3)": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p class=\"editor-paragraph\">@{items('For_each_-_task')?['Title']}:</p><p class=\"editor-paragraph\">&gt; @{items('For_each_-_task')?['Description']}</p><br><br>"
                                                },
                                                "path": "/Incidents/Comment"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Run_query_and_list_results": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": "_GetWatchlist('[parameters('watchlistName')]')\n| where SearchKey == \"@{items('For_each_-_alert')?['properties']?['alertDisplayName']}\"\n| project-away _DTItemId, LastUpdatedTimeUTC, SearchKey, Alert, Date\n| extend PackedIgnoreNullEmpty=pack_all(true)\n| mv-expand PackedIgnoreNullEmpty\n| extend Task = split(PackedIgnoreNullEmpty, '\"', 3)\n| extend Title = split(Task.[0], '^', 0)\n| extend Description = split(Task.[0], '^', 1)\n| project Title = Title.[0], Description = Description.[0]",
                                        "path": "/queryData",
                                        "queries": {
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "resourcegroups": "[parameters('resourceGroupName')]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "resourcename": "[parameters('workspaceName')]",
                                            "timerange": "@{utcNow()}"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Foreach"
                        }
                    },
                    "parameters": {
                        "$connections": {
                            "type": "Object",
                            "defaultValue": {}
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('sentinelConnectionName'))]",
                                "connectionName": "[variables('sentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('monitorLogsConnectionName'))]",
                                "connectionName": "[variables('monitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logicAppResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
        }
    }
}
